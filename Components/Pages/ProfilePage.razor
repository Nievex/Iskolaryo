@page "/profile"
@using Iskolaryo.Components.Pages.AuthorizedPages.Clubs
@using Microsoft.AspNetCore.Components.Authorization
@using Iskolaryo.Auth


@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView Roles="User,Admin">
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

<PageTitle>Profile</PageTitle>

<section class="profile-section">
    <div class="profile-container">
        <div class="profile-header clubs-header">
            <p>Your account</p>
        </div>
        <div class="profile-info">
            <div class="left-panel">
                <img src="/images/profile.svg" class="user-img" />
            </div>

            <div class="right-panel">
                <p class="name">Name: <span>@currentUser!.Name</span></p>
                <p class="student-number">Student number: <span>@currentUser!.ID</span></p>
                <p class="email">Email: <span>@currentUser!.Email</span></p>
                <p class="phone-number">Phone number: <span>@currentUser!.ContactNumber</span></p>

                <input type="button" @onclick="Logout" class="logout-btn" value="Logout" />
            </div>
        </div>

        <h1>Club joined</h1>
        <div class="current-club">
            @if(currentUser!.Club == null)
            {
                <div class="club-info">
                    <p class="club-name">No Clubs joined!</p>
                </div>
            } else
            {
                <div class="club-img">
                    <img src="/images/club.svg" class="club" />
                </div>

                <div class="club-info">
                    <p class="club-name">@currentUser!.Club.Name</p>
                    <p class="club-description">@currentUser!.Club.Description</p>
                </div>

                <div class="leave-btn-container">
                    <input type="button" value="Leave" class="leave-btn" />
                </div>
            }
        </div>

            
        <h1>Edit profile</h1>
        <div class="info-container">
            <div class="img-container">
                <img src="/images/profile.svg" class="user-img" />
                <input type="button" value="Change" class="change-pic-btn" />
            </div>

            <div class="update-container">

                <p>Email: </p>
                <input type="text" placeholder="New email" class="update-field" />

                <p>Phone number: </p>
                <input type="text" placeholder="New phone number" class="update-field" />

                <p>Old password: </p>
                <input type="password" class="update-field" />

                <p>New password: </p>
                <input type="password" class="update-field" />

                <input type="button" value="Update" class="update-btn" />
            </div>

        </div>
    </div>
</section>

@code {
    private Member? currentUser; 

    protected override void OnInitialized()
    {
        currentUser = LoggedUserSingleton.LoggedUser;

    }

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthStateProvider)AuthenticationStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("/login", true);

    }
}
