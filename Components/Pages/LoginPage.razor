@rendermode @(new InteractiveServerRenderMode(false))
@page "/"
@page "/login"
@layout Iskolaryo.Components.Layout.LoginLayout

@using Iskolaryo.Auth
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserAccountService UserAccountService
@inject NavigationManager NavigationManager

<section class="login-section">
    <div class="login-container">
        <div class="login-flex">
            <div class="left-panel">

                <div class="logo">
                    <img src="/images/black-logo.svg" />
                    <h2 class="typography">ISKOLARYO</h2>
                </div>

                <div class="input-field">
                    <i class="fa fa-user" aria-hidden="true"></i>
                    <input @bind-value="Username" type="text" placeholder="Username" class="username-txt" name="username" />
                </div>
                <div class="input-field">
                    <i class="fa fa-lock" aria-hidden="true"></i>
                    <input @bind-value="Password" type="password" placeholder="Password" class="password-txt" name="password" />
                </div>
                <button @onclick="Login" class="submit-btn">Login</button>

                <div class="sign-up">
                    <p>Don't have an account? <a href="#" class="signup-link">Sign up</a></p>
                </div>

            </div>
        </div>

        <div class="right-panel">
        </div>
    </div>
</section>

@code {
    public string? Username { get; set; }
    public string? Password { get; set; }

    public async Task Login()
    {
        var user = UserAccountService.GetUserAccount(Username);
        if (user == null || user.Password != Password)
        {
            Console.WriteLine("Invalid username or password");
            return;
        }

        var customAuthStateProvider = (CustomAuthStateProvider)AuthenticationStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                Username = Username,
                Role = user.Role
            });
        NavigationManager.NavigateTo("/home", true);
    }

    public async Task Enter(KeyboardEventArgs e)
    {
        if(e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await Login();
        }
    }
}
